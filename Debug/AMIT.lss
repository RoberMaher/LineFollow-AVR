
AMIT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006b4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000728  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000a  00800060  00800060  00000728  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000728  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000758  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  00000794  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000013b5  00000000  00000000  000008e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007d6  00000000  00000000  00001c99  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000942  00000000  00000000  0000246f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000037c  00000000  00000000  00002db4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000570  00000000  00000000  00003130  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000083f  00000000  00000000  000036a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000100  00000000  00000000  00003edf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 95 02 	jmp	0x52a	; 0x52a <__vector_1>
   8:	0c 94 bc 02 	jmp	0x578	; 0x578 <__vector_2>
   c:	0c 94 e3 02 	jmp	0x5c6	; 0x5c6 <__vector_3>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 31 03 	jmp	0x662	; 0x662 <__vector_10>
  2c:	0c 94 0a 03 	jmp	0x614	; 0x614 <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 eb       	ldi	r30, 0xB4	; 180
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	aa 36       	cpi	r26, 0x6A	; 106
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 58 03 	jmp	0x6b0	; 0x6b0 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:



int main(void)
{
	DIO_voidSetPinDir(DIO_PORTA,DIO_PIN0,INPUT);
  92:	40 e0       	ldi	r20, 0x00	; 0
  94:	60 e0       	ldi	r22, 0x00	; 0
  96:	80 e0       	ldi	r24, 0x00	; 0
  98:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(DIO_PORTA,DIO_PIN1,INPUT);
  9c:	40 e0       	ldi	r20, 0x00	; 0
  9e:	61 e0       	ldi	r22, 0x01	; 1
  a0:	80 e0       	ldi	r24, 0x00	; 0
  a2:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinDir>
	
	
	while (1)
	{
		if (DIO_u8ReadpinVal(DIO_PORTA,DIO_PIN0)==1 && DIO_u8ReadpinVal(DIO_PORTA,DIO_PIN1)==1)
  a6:	60 e0       	ldi	r22, 0x00	; 0
  a8:	80 e0       	ldi	r24, 0x00	; 0
  aa:	0e 94 67 02 	call	0x4ce	; 0x4ce <DIO_u8ReadpinVal>
  ae:	81 30       	cpi	r24, 0x01	; 1
  b0:	49 f4       	brne	.+18     	; 0xc4 <main+0x32>
  b2:	61 e0       	ldi	r22, 0x01	; 1
  b4:	80 e0       	ldi	r24, 0x00	; 0
  b6:	0e 94 67 02 	call	0x4ce	; 0x4ce <DIO_u8ReadpinVal>
  ba:	81 30       	cpi	r24, 0x01	; 1
  bc:	19 f4       	brne	.+6      	; 0xc4 <main+0x32>
		{
			DCMOTOR_voidCW();
  be:	0e 94 8d 00 	call	0x11a	; 0x11a <DCMOTOR_voidCW>
  c2:	f1 cf       	rjmp	.-30     	; 0xa6 <main+0x14>
		}
		else if (DIO_u8ReadpinVal(DIO_PORTA,DIO_PIN0)==1 && DIO_u8ReadpinVal(DIO_PORTA,DIO_PIN1)==0)
  c4:	60 e0       	ldi	r22, 0x00	; 0
  c6:	80 e0       	ldi	r24, 0x00	; 0
  c8:	0e 94 67 02 	call	0x4ce	; 0x4ce <DIO_u8ReadpinVal>
  cc:	81 30       	cpi	r24, 0x01	; 1
  ce:	49 f4       	brne	.+18     	; 0xe2 <main+0x50>
  d0:	61 e0       	ldi	r22, 0x01	; 1
  d2:	80 e0       	ldi	r24, 0x00	; 0
  d4:	0e 94 67 02 	call	0x4ce	; 0x4ce <DIO_u8ReadpinVal>
  d8:	81 11       	cpse	r24, r1
  da:	03 c0       	rjmp	.+6      	; 0xe2 <main+0x50>
		{
			DCMOTOR_voidCWRight();
  dc:	0e 94 ca 00 	call	0x194	; 0x194 <DCMOTOR_voidCWRight>
  e0:	e2 cf       	rjmp	.-60     	; 0xa6 <main+0x14>
		}
		else if (DIO_u8ReadpinVal(DIO_PORTA,DIO_PIN0)==0 && DIO_u8ReadpinVal(DIO_PORTA,DIO_PIN1)==1)
  e2:	60 e0       	ldi	r22, 0x00	; 0
  e4:	80 e0       	ldi	r24, 0x00	; 0
  e6:	0e 94 67 02 	call	0x4ce	; 0x4ce <DIO_u8ReadpinVal>
  ea:	81 11       	cpse	r24, r1
  ec:	08 c0       	rjmp	.+16     	; 0xfe <main+0x6c>
  ee:	61 e0       	ldi	r22, 0x01	; 1
  f0:	0e 94 67 02 	call	0x4ce	; 0x4ce <DIO_u8ReadpinVal>
  f4:	81 30       	cpi	r24, 0x01	; 1
  f6:	19 f4       	brne	.+6      	; 0xfe <main+0x6c>
		{
			DCMOTOR_voidCWLeft();	
  f8:	0e 94 07 01 	call	0x20e	; 0x20e <DCMOTOR_voidCWLeft>
  fc:	d4 cf       	rjmp	.-88     	; 0xa6 <main+0x14>
		}
		else if (DIO_u8ReadpinVal(DIO_PORTA,DIO_PIN0)==0 && DIO_u8ReadpinVal(DIO_PORTA,DIO_PIN1)==0)
  fe:	60 e0       	ldi	r22, 0x00	; 0
 100:	80 e0       	ldi	r24, 0x00	; 0
 102:	0e 94 67 02 	call	0x4ce	; 0x4ce <DIO_u8ReadpinVal>
 106:	81 11       	cpse	r24, r1
 108:	ce cf       	rjmp	.-100    	; 0xa6 <main+0x14>
 10a:	61 e0       	ldi	r22, 0x01	; 1
 10c:	0e 94 67 02 	call	0x4ce	; 0x4ce <DIO_u8ReadpinVal>
 110:	81 11       	cpse	r24, r1
 112:	c9 cf       	rjmp	.-110    	; 0xa6 <main+0x14>
		{
			DCMOTOR_voidStop();
 114:	0e 94 44 01 	call	0x288	; 0x288 <DCMOTOR_voidStop>
 118:	c6 cf       	rjmp	.-116    	; 0xa6 <main+0x14>

0000011a <DCMOTOR_voidCW>:
	DIO_voidSetPinVal(H_ENA_PORT,H_ENA_PIN,HIGH) ;
	DIO_voidSetPinVal(H_ENB_PORT,H_ENB_PIN,HIGH) ;
	DIO_voidSetPinVal(H_A1_PORT,H_A1_PIN,LOW) ;
	DIO_voidSetPinVal(H_A2_PORT,H_A2_PIN,HIGH) ;
	DIO_voidSetPinVal(H_A3_PORT,H_A3_PIN,LOW) ;
	DIO_voidSetPinVal(H_A4_PORT,H_A4_PIN,HIGH) ;
 11a:	41 e0       	ldi	r20, 0x01	; 1
 11c:	64 e0       	ldi	r22, 0x04	; 4
 11e:	83 e0       	ldi	r24, 0x03	; 3
 120:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinDir>
 124:	41 e0       	ldi	r20, 0x01	; 1
 126:	65 e0       	ldi	r22, 0x05	; 5
 128:	83 e0       	ldi	r24, 0x03	; 3
 12a:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinDir>
 12e:	41 e0       	ldi	r20, 0x01	; 1
 130:	60 e0       	ldi	r22, 0x00	; 0
 132:	82 e0       	ldi	r24, 0x02	; 2
 134:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinDir>
 138:	41 e0       	ldi	r20, 0x01	; 1
 13a:	61 e0       	ldi	r22, 0x01	; 1
 13c:	82 e0       	ldi	r24, 0x02	; 2
 13e:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinDir>
 142:	41 e0       	ldi	r20, 0x01	; 1
 144:	62 e0       	ldi	r22, 0x02	; 2
 146:	82 e0       	ldi	r24, 0x02	; 2
 148:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinDir>
 14c:	41 e0       	ldi	r20, 0x01	; 1
 14e:	63 e0       	ldi	r22, 0x03	; 3
 150:	82 e0       	ldi	r24, 0x02	; 2
 152:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinDir>
 156:	41 e0       	ldi	r20, 0x01	; 1
 158:	64 e0       	ldi	r22, 0x04	; 4
 15a:	83 e0       	ldi	r24, 0x03	; 3
 15c:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <DIO_voidSetPinVal>
 160:	41 e0       	ldi	r20, 0x01	; 1
 162:	65 e0       	ldi	r22, 0x05	; 5
 164:	83 e0       	ldi	r24, 0x03	; 3
 166:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <DIO_voidSetPinVal>
 16a:	41 e0       	ldi	r20, 0x01	; 1
 16c:	60 e0       	ldi	r22, 0x00	; 0
 16e:	82 e0       	ldi	r24, 0x02	; 2
 170:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <DIO_voidSetPinVal>
 174:	40 e0       	ldi	r20, 0x00	; 0
 176:	61 e0       	ldi	r22, 0x01	; 1
 178:	82 e0       	ldi	r24, 0x02	; 2
 17a:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <DIO_voidSetPinVal>
 17e:	41 e0       	ldi	r20, 0x01	; 1
 180:	62 e0       	ldi	r22, 0x02	; 2
 182:	82 e0       	ldi	r24, 0x02	; 2
 184:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <DIO_voidSetPinVal>
 188:	40 e0       	ldi	r20, 0x00	; 0
 18a:	63 e0       	ldi	r22, 0x03	; 3
 18c:	82 e0       	ldi	r24, 0x02	; 2
 18e:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <DIO_voidSetPinVal>
 192:	08 95       	ret

00000194 <DCMOTOR_voidCWRight>:
 194:	41 e0       	ldi	r20, 0x01	; 1
 196:	64 e0       	ldi	r22, 0x04	; 4
 198:	83 e0       	ldi	r24, 0x03	; 3
 19a:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinDir>
 19e:	41 e0       	ldi	r20, 0x01	; 1
 1a0:	65 e0       	ldi	r22, 0x05	; 5
 1a2:	83 e0       	ldi	r24, 0x03	; 3
 1a4:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinDir>
 1a8:	41 e0       	ldi	r20, 0x01	; 1
 1aa:	60 e0       	ldi	r22, 0x00	; 0
 1ac:	82 e0       	ldi	r24, 0x02	; 2
 1ae:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinDir>
 1b2:	41 e0       	ldi	r20, 0x01	; 1
 1b4:	61 e0       	ldi	r22, 0x01	; 1
 1b6:	82 e0       	ldi	r24, 0x02	; 2
 1b8:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinDir>
 1bc:	41 e0       	ldi	r20, 0x01	; 1
 1be:	62 e0       	ldi	r22, 0x02	; 2
 1c0:	82 e0       	ldi	r24, 0x02	; 2
 1c2:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinDir>
 1c6:	41 e0       	ldi	r20, 0x01	; 1
 1c8:	63 e0       	ldi	r22, 0x03	; 3
 1ca:	82 e0       	ldi	r24, 0x02	; 2
 1cc:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinDir>
 1d0:	41 e0       	ldi	r20, 0x01	; 1
 1d2:	64 e0       	ldi	r22, 0x04	; 4
 1d4:	83 e0       	ldi	r24, 0x03	; 3
 1d6:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <DIO_voidSetPinVal>
 1da:	41 e0       	ldi	r20, 0x01	; 1
 1dc:	65 e0       	ldi	r22, 0x05	; 5
 1de:	83 e0       	ldi	r24, 0x03	; 3
 1e0:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <DIO_voidSetPinVal>
 1e4:	41 e0       	ldi	r20, 0x01	; 1
 1e6:	60 e0       	ldi	r22, 0x00	; 0
 1e8:	82 e0       	ldi	r24, 0x02	; 2
 1ea:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <DIO_voidSetPinVal>
 1ee:	40 e0       	ldi	r20, 0x00	; 0
 1f0:	61 e0       	ldi	r22, 0x01	; 1
 1f2:	82 e0       	ldi	r24, 0x02	; 2
 1f4:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <DIO_voidSetPinVal>
 1f8:	40 e0       	ldi	r20, 0x00	; 0
 1fa:	62 e0       	ldi	r22, 0x02	; 2
 1fc:	82 e0       	ldi	r24, 0x02	; 2
 1fe:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <DIO_voidSetPinVal>
 202:	40 e0       	ldi	r20, 0x00	; 0
 204:	63 e0       	ldi	r22, 0x03	; 3
 206:	82 e0       	ldi	r24, 0x02	; 2
 208:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <DIO_voidSetPinVal>
 20c:	08 95       	ret

0000020e <DCMOTOR_voidCWLeft>:
 20e:	41 e0       	ldi	r20, 0x01	; 1
 210:	64 e0       	ldi	r22, 0x04	; 4
 212:	83 e0       	ldi	r24, 0x03	; 3
 214:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinDir>
 218:	41 e0       	ldi	r20, 0x01	; 1
 21a:	65 e0       	ldi	r22, 0x05	; 5
 21c:	83 e0       	ldi	r24, 0x03	; 3
 21e:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinDir>
 222:	41 e0       	ldi	r20, 0x01	; 1
 224:	60 e0       	ldi	r22, 0x00	; 0
 226:	82 e0       	ldi	r24, 0x02	; 2
 228:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinDir>
 22c:	41 e0       	ldi	r20, 0x01	; 1
 22e:	61 e0       	ldi	r22, 0x01	; 1
 230:	82 e0       	ldi	r24, 0x02	; 2
 232:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinDir>
 236:	41 e0       	ldi	r20, 0x01	; 1
 238:	62 e0       	ldi	r22, 0x02	; 2
 23a:	82 e0       	ldi	r24, 0x02	; 2
 23c:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinDir>
 240:	41 e0       	ldi	r20, 0x01	; 1
 242:	63 e0       	ldi	r22, 0x03	; 3
 244:	82 e0       	ldi	r24, 0x02	; 2
 246:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinDir>
 24a:	41 e0       	ldi	r20, 0x01	; 1
 24c:	64 e0       	ldi	r22, 0x04	; 4
 24e:	83 e0       	ldi	r24, 0x03	; 3
 250:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <DIO_voidSetPinVal>
 254:	41 e0       	ldi	r20, 0x01	; 1
 256:	65 e0       	ldi	r22, 0x05	; 5
 258:	83 e0       	ldi	r24, 0x03	; 3
 25a:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <DIO_voidSetPinVal>
 25e:	40 e0       	ldi	r20, 0x00	; 0
 260:	60 e0       	ldi	r22, 0x00	; 0
 262:	82 e0       	ldi	r24, 0x02	; 2
 264:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <DIO_voidSetPinVal>
 268:	40 e0       	ldi	r20, 0x00	; 0
 26a:	61 e0       	ldi	r22, 0x01	; 1
 26c:	82 e0       	ldi	r24, 0x02	; 2
 26e:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <DIO_voidSetPinVal>
 272:	41 e0       	ldi	r20, 0x01	; 1
 274:	62 e0       	ldi	r22, 0x02	; 2
 276:	82 e0       	ldi	r24, 0x02	; 2
 278:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <DIO_voidSetPinVal>
 27c:	40 e0       	ldi	r20, 0x00	; 0
 27e:	63 e0       	ldi	r22, 0x03	; 3
 280:	82 e0       	ldi	r24, 0x02	; 2
 282:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <DIO_voidSetPinVal>
 286:	08 95       	ret

00000288 <DCMOTOR_voidStop>:
}
void DCMOTOR_voidStop(void){
	
	
	/*make pins as output */
	DIO_voidSetPinDir(H_ENA_PORT,H_ENA_PIN,OUTPUT) ;
 288:	41 e0       	ldi	r20, 0x01	; 1
 28a:	64 e0       	ldi	r22, 0x04	; 4
 28c:	83 e0       	ldi	r24, 0x03	; 3
 28e:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(H_ENB_PORT,H_ENB_PIN,OUTPUT) ;
 292:	41 e0       	ldi	r20, 0x01	; 1
 294:	65 e0       	ldi	r22, 0x05	; 5
 296:	83 e0       	ldi	r24, 0x03	; 3
 298:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(H_A1_PORT,H_A1_PIN,OUTPUT) ;
 29c:	41 e0       	ldi	r20, 0x01	; 1
 29e:	60 e0       	ldi	r22, 0x00	; 0
 2a0:	82 e0       	ldi	r24, 0x02	; 2
 2a2:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(H_A2_PORT,H_A2_PIN,OUTPUT) ;
 2a6:	41 e0       	ldi	r20, 0x01	; 1
 2a8:	61 e0       	ldi	r22, 0x01	; 1
 2aa:	82 e0       	ldi	r24, 0x02	; 2
 2ac:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(H_A3_PORT,H_A3_PIN,OUTPUT) ;
 2b0:	41 e0       	ldi	r20, 0x01	; 1
 2b2:	62 e0       	ldi	r22, 0x02	; 2
 2b4:	82 e0       	ldi	r24, 0x02	; 2
 2b6:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(H_A4_PORT,H_A4_PIN,OUTPUT) ;
 2ba:	41 e0       	ldi	r20, 0x01	; 1
 2bc:	63 e0       	ldi	r22, 0x03	; 3
 2be:	82 e0       	ldi	r24, 0x02	; 2
 2c0:	0e 94 81 01 	call	0x302	; 0x302 <DIO_voidSetPinDir>
	
	/*Drive motor cw */
	
	DIO_voidSetPinVal(H_ENA_PORT,H_ENA_PIN,LOW) ;
 2c4:	40 e0       	ldi	r20, 0x00	; 0
 2c6:	64 e0       	ldi	r22, 0x04	; 4
 2c8:	83 e0       	ldi	r24, 0x03	; 3
 2ca:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <DIO_voidSetPinVal>
	DIO_voidSetPinVal(H_ENB_PORT,H_ENB_PIN,LOW) ;
 2ce:	40 e0       	ldi	r20, 0x00	; 0
 2d0:	65 e0       	ldi	r22, 0x05	; 5
 2d2:	83 e0       	ldi	r24, 0x03	; 3
 2d4:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <DIO_voidSetPinVal>
	  DIO_voidSetPinVal(H_A1_PORT,H_A1_PIN,LOW) ;
 2d8:	40 e0       	ldi	r20, 0x00	; 0
 2da:	60 e0       	ldi	r22, 0x00	; 0
 2dc:	82 e0       	ldi	r24, 0x02	; 2
 2de:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <DIO_voidSetPinVal>
	  DIO_voidSetPinVal(H_A2_PORT,H_A2_PIN,LOW) ;
 2e2:	40 e0       	ldi	r20, 0x00	; 0
 2e4:	61 e0       	ldi	r22, 0x01	; 1
 2e6:	82 e0       	ldi	r24, 0x02	; 2
 2e8:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <DIO_voidSetPinVal>
	  DIO_voidSetPinVal(H_A3_PORT,H_A3_PIN,LOW) ;
 2ec:	40 e0       	ldi	r20, 0x00	; 0
 2ee:	62 e0       	ldi	r22, 0x02	; 2
 2f0:	82 e0       	ldi	r24, 0x02	; 2
 2f2:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <DIO_voidSetPinVal>
	  DIO_voidSetPinVal(H_A4_PORT,H_A4_PIN,LOW) ;
 2f6:	40 e0       	ldi	r20, 0x00	; 0
 2f8:	63 e0       	ldi	r22, 0x03	; 3
 2fa:	82 e0       	ldi	r24, 0x02	; 2
 2fc:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <DIO_voidSetPinVal>
 300:	08 95       	ret

00000302 <DIO_voidSetPinDir>:
	     switch(copy_u8port){
			 
			  case DIO_PORTA: TOGGLE_BIT(PORTA_REG,copy_u8pin) ; break;
			  case DIO_PORTB: TOGGLE_BIT(PORTB_REG,copy_u8pin) ; break;
			  case DIO_PORTC: TOGGLE_BIT(PORTC_REG,copy_u8pin) ; break;
			  case DIO_PORTD: TOGGLE_BIT(PORTD_REG,copy_u8pin) ; break ;
 302:	42 30       	cpi	r20, 0x02	; 2
 304:	08 f0       	brcs	.+2      	; 0x308 <DIO_voidSetPinDir+0x6>
 306:	6f c0       	rjmp	.+222    	; 0x3e6 <DIO_voidSetPinDir+0xe4>
 308:	41 30       	cpi	r20, 0x01	; 1
 30a:	a1 f5       	brne	.+104    	; 0x374 <DIO_voidSetPinDir+0x72>
 30c:	81 30       	cpi	r24, 0x01	; 1
 30e:	89 f0       	breq	.+34     	; 0x332 <DIO_voidSetPinDir+0x30>
 310:	28 f0       	brcs	.+10     	; 0x31c <DIO_voidSetPinDir+0x1a>
 312:	82 30       	cpi	r24, 0x02	; 2
 314:	c9 f0       	breq	.+50     	; 0x348 <DIO_voidSetPinDir+0x46>
 316:	83 30       	cpi	r24, 0x03	; 3
 318:	11 f1       	breq	.+68     	; 0x35e <DIO_voidSetPinDir+0x5c>
 31a:	08 95       	ret
 31c:	2a b3       	in	r18, 0x1a	; 26
 31e:	81 e0       	ldi	r24, 0x01	; 1
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	02 c0       	rjmp	.+4      	; 0x328 <DIO_voidSetPinDir+0x26>
 324:	88 0f       	add	r24, r24
 326:	99 1f       	adc	r25, r25
 328:	6a 95       	dec	r22
 32a:	e2 f7       	brpl	.-8      	; 0x324 <DIO_voidSetPinDir+0x22>
 32c:	82 2b       	or	r24, r18
 32e:	8a bb       	out	0x1a, r24	; 26
 330:	08 95       	ret
 332:	27 b3       	in	r18, 0x17	; 23
 334:	81 e0       	ldi	r24, 0x01	; 1
 336:	90 e0       	ldi	r25, 0x00	; 0
 338:	02 c0       	rjmp	.+4      	; 0x33e <DIO_voidSetPinDir+0x3c>
 33a:	88 0f       	add	r24, r24
 33c:	99 1f       	adc	r25, r25
 33e:	6a 95       	dec	r22
 340:	e2 f7       	brpl	.-8      	; 0x33a <DIO_voidSetPinDir+0x38>
 342:	82 2b       	or	r24, r18
 344:	87 bb       	out	0x17, r24	; 23
 346:	08 95       	ret
 348:	24 b3       	in	r18, 0x14	; 20
 34a:	81 e0       	ldi	r24, 0x01	; 1
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	02 c0       	rjmp	.+4      	; 0x354 <DIO_voidSetPinDir+0x52>
 350:	88 0f       	add	r24, r24
 352:	99 1f       	adc	r25, r25
 354:	6a 95       	dec	r22
 356:	e2 f7       	brpl	.-8      	; 0x350 <DIO_voidSetPinDir+0x4e>
 358:	82 2b       	or	r24, r18
 35a:	84 bb       	out	0x14, r24	; 20
 35c:	08 95       	ret
 35e:	21 b3       	in	r18, 0x11	; 17
 360:	81 e0       	ldi	r24, 0x01	; 1
 362:	90 e0       	ldi	r25, 0x00	; 0
 364:	02 c0       	rjmp	.+4      	; 0x36a <DIO_voidSetPinDir+0x68>
 366:	88 0f       	add	r24, r24
 368:	99 1f       	adc	r25, r25
 36a:	6a 95       	dec	r22
 36c:	e2 f7       	brpl	.-8      	; 0x366 <DIO_voidSetPinDir+0x64>
 36e:	82 2b       	or	r24, r18
 370:	81 bb       	out	0x11, r24	; 17
 372:	08 95       	ret
 374:	41 11       	cpse	r20, r1
 376:	37 c0       	rjmp	.+110    	; 0x3e6 <DIO_voidSetPinDir+0xe4>
 378:	81 30       	cpi	r24, 0x01	; 1
 37a:	91 f0       	breq	.+36     	; 0x3a0 <DIO_voidSetPinDir+0x9e>
 37c:	28 f0       	brcs	.+10     	; 0x388 <DIO_voidSetPinDir+0x86>
 37e:	82 30       	cpi	r24, 0x02	; 2
 380:	d9 f0       	breq	.+54     	; 0x3b8 <DIO_voidSetPinDir+0xb6>
 382:	83 30       	cpi	r24, 0x03	; 3
 384:	29 f1       	breq	.+74     	; 0x3d0 <DIO_voidSetPinDir+0xce>
 386:	08 95       	ret
 388:	2a b3       	in	r18, 0x1a	; 26
 38a:	81 e0       	ldi	r24, 0x01	; 1
 38c:	90 e0       	ldi	r25, 0x00	; 0
 38e:	02 c0       	rjmp	.+4      	; 0x394 <DIO_voidSetPinDir+0x92>
 390:	88 0f       	add	r24, r24
 392:	99 1f       	adc	r25, r25
 394:	6a 95       	dec	r22
 396:	e2 f7       	brpl	.-8      	; 0x390 <DIO_voidSetPinDir+0x8e>
 398:	80 95       	com	r24
 39a:	82 23       	and	r24, r18
 39c:	8a bb       	out	0x1a, r24	; 26
 39e:	08 95       	ret
 3a0:	27 b3       	in	r18, 0x17	; 23
 3a2:	81 e0       	ldi	r24, 0x01	; 1
 3a4:	90 e0       	ldi	r25, 0x00	; 0
 3a6:	02 c0       	rjmp	.+4      	; 0x3ac <DIO_voidSetPinDir+0xaa>
 3a8:	88 0f       	add	r24, r24
 3aa:	99 1f       	adc	r25, r25
 3ac:	6a 95       	dec	r22
 3ae:	e2 f7       	brpl	.-8      	; 0x3a8 <DIO_voidSetPinDir+0xa6>
 3b0:	80 95       	com	r24
 3b2:	82 23       	and	r24, r18
 3b4:	87 bb       	out	0x17, r24	; 23
 3b6:	08 95       	ret
 3b8:	24 b3       	in	r18, 0x14	; 20
 3ba:	81 e0       	ldi	r24, 0x01	; 1
 3bc:	90 e0       	ldi	r25, 0x00	; 0
 3be:	02 c0       	rjmp	.+4      	; 0x3c4 <DIO_voidSetPinDir+0xc2>
 3c0:	88 0f       	add	r24, r24
 3c2:	99 1f       	adc	r25, r25
 3c4:	6a 95       	dec	r22
 3c6:	e2 f7       	brpl	.-8      	; 0x3c0 <DIO_voidSetPinDir+0xbe>
 3c8:	80 95       	com	r24
 3ca:	82 23       	and	r24, r18
 3cc:	84 bb       	out	0x14, r24	; 20
 3ce:	08 95       	ret
 3d0:	21 b3       	in	r18, 0x11	; 17
 3d2:	81 e0       	ldi	r24, 0x01	; 1
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	02 c0       	rjmp	.+4      	; 0x3dc <DIO_voidSetPinDir+0xda>
 3d8:	88 0f       	add	r24, r24
 3da:	99 1f       	adc	r25, r25
 3dc:	6a 95       	dec	r22
 3de:	e2 f7       	brpl	.-8      	; 0x3d8 <DIO_voidSetPinDir+0xd6>
 3e0:	80 95       	com	r24
 3e2:	82 23       	and	r24, r18
 3e4:	81 bb       	out	0x11, r24	; 17
 3e6:	08 95       	ret

000003e8 <DIO_voidSetPinVal>:
 3e8:	42 30       	cpi	r20, 0x02	; 2
 3ea:	08 f0       	brcs	.+2      	; 0x3ee <DIO_voidSetPinVal+0x6>
 3ec:	6f c0       	rjmp	.+222    	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
 3ee:	41 30       	cpi	r20, 0x01	; 1
 3f0:	a1 f5       	brne	.+104    	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
 3f2:	81 30       	cpi	r24, 0x01	; 1
 3f4:	89 f0       	breq	.+34     	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 3f6:	28 f0       	brcs	.+10     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 3f8:	82 30       	cpi	r24, 0x02	; 2
 3fa:	c9 f0       	breq	.+50     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 3fc:	83 30       	cpi	r24, 0x03	; 3
 3fe:	11 f1       	breq	.+68     	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
 400:	08 95       	ret
 402:	2b b3       	in	r18, 0x1b	; 27
 404:	81 e0       	ldi	r24, 0x01	; 1
 406:	90 e0       	ldi	r25, 0x00	; 0
 408:	02 c0       	rjmp	.+4      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 40a:	88 0f       	add	r24, r24
 40c:	99 1f       	adc	r25, r25
 40e:	6a 95       	dec	r22
 410:	e2 f7       	brpl	.-8      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 412:	82 2b       	or	r24, r18
 414:	8b bb       	out	0x1b, r24	; 27
 416:	08 95       	ret
 418:	28 b3       	in	r18, 0x18	; 24
 41a:	81 e0       	ldi	r24, 0x01	; 1
 41c:	90 e0       	ldi	r25, 0x00	; 0
 41e:	02 c0       	rjmp	.+4      	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 420:	88 0f       	add	r24, r24
 422:	99 1f       	adc	r25, r25
 424:	6a 95       	dec	r22
 426:	e2 f7       	brpl	.-8      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 428:	82 2b       	or	r24, r18
 42a:	88 bb       	out	0x18, r24	; 24
 42c:	08 95       	ret
 42e:	25 b3       	in	r18, 0x15	; 21
 430:	81 e0       	ldi	r24, 0x01	; 1
 432:	90 e0       	ldi	r25, 0x00	; 0
 434:	02 c0       	rjmp	.+4      	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 436:	88 0f       	add	r24, r24
 438:	99 1f       	adc	r25, r25
 43a:	6a 95       	dec	r22
 43c:	e2 f7       	brpl	.-8      	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 43e:	82 2b       	or	r24, r18
 440:	85 bb       	out	0x15, r24	; 21
 442:	08 95       	ret
 444:	22 b3       	in	r18, 0x12	; 18
 446:	81 e0       	ldi	r24, 0x01	; 1
 448:	90 e0       	ldi	r25, 0x00	; 0
 44a:	02 c0       	rjmp	.+4      	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
 44c:	88 0f       	add	r24, r24
 44e:	99 1f       	adc	r25, r25
 450:	6a 95       	dec	r22
 452:	e2 f7       	brpl	.-8      	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 454:	82 2b       	or	r24, r18
 456:	82 bb       	out	0x12, r24	; 18
 458:	08 95       	ret
 45a:	41 11       	cpse	r20, r1
 45c:	37 c0       	rjmp	.+110    	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
 45e:	81 30       	cpi	r24, 0x01	; 1
 460:	91 f0       	breq	.+36     	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 462:	28 f0       	brcs	.+10     	; 0x46e <__EEPROM_REGION_LENGTH__+0x6e>
 464:	82 30       	cpi	r24, 0x02	; 2
 466:	d9 f0       	breq	.+54     	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
 468:	83 30       	cpi	r24, 0x03	; 3
 46a:	29 f1       	breq	.+74     	; 0x4b6 <__EEPROM_REGION_LENGTH__+0xb6>
 46c:	08 95       	ret
 46e:	2b b3       	in	r18, 0x1b	; 27
 470:	81 e0       	ldi	r24, 0x01	; 1
 472:	90 e0       	ldi	r25, 0x00	; 0
 474:	02 c0       	rjmp	.+4      	; 0x47a <__EEPROM_REGION_LENGTH__+0x7a>
 476:	88 0f       	add	r24, r24
 478:	99 1f       	adc	r25, r25
 47a:	6a 95       	dec	r22
 47c:	e2 f7       	brpl	.-8      	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 47e:	80 95       	com	r24
 480:	82 23       	and	r24, r18
 482:	8b bb       	out	0x1b, r24	; 27
 484:	08 95       	ret
 486:	28 b3       	in	r18, 0x18	; 24
 488:	81 e0       	ldi	r24, 0x01	; 1
 48a:	90 e0       	ldi	r25, 0x00	; 0
 48c:	02 c0       	rjmp	.+4      	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
 48e:	88 0f       	add	r24, r24
 490:	99 1f       	adc	r25, r25
 492:	6a 95       	dec	r22
 494:	e2 f7       	brpl	.-8      	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
 496:	80 95       	com	r24
 498:	82 23       	and	r24, r18
 49a:	88 bb       	out	0x18, r24	; 24
 49c:	08 95       	ret
 49e:	25 b3       	in	r18, 0x15	; 21
 4a0:	81 e0       	ldi	r24, 0x01	; 1
 4a2:	90 e0       	ldi	r25, 0x00	; 0
 4a4:	02 c0       	rjmp	.+4      	; 0x4aa <__EEPROM_REGION_LENGTH__+0xaa>
 4a6:	88 0f       	add	r24, r24
 4a8:	99 1f       	adc	r25, r25
 4aa:	6a 95       	dec	r22
 4ac:	e2 f7       	brpl	.-8      	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
 4ae:	80 95       	com	r24
 4b0:	82 23       	and	r24, r18
 4b2:	85 bb       	out	0x15, r24	; 21
 4b4:	08 95       	ret
 4b6:	22 b3       	in	r18, 0x12	; 18
 4b8:	81 e0       	ldi	r24, 0x01	; 1
 4ba:	90 e0       	ldi	r25, 0x00	; 0
 4bc:	02 c0       	rjmp	.+4      	; 0x4c2 <__EEPROM_REGION_LENGTH__+0xc2>
 4be:	88 0f       	add	r24, r24
 4c0:	99 1f       	adc	r25, r25
 4c2:	6a 95       	dec	r22
 4c4:	e2 f7       	brpl	.-8      	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 4c6:	80 95       	com	r24
 4c8:	82 23       	and	r24, r18
 4ca:	82 bb       	out	0x12, r24	; 18
 4cc:	08 95       	ret

000004ce <DIO_u8ReadpinVal>:

u8 DIO_u8ReadpinVal(u8 copy_u8port, u8 copy_u8pin){
	
	 u8 Loc_u8Val=0 ; 
	 
	  switch(copy_u8port){
 4ce:	81 30       	cpi	r24, 0x01	; 1
 4d0:	79 f0       	breq	.+30     	; 0x4f0 <DIO_u8ReadpinVal+0x22>
 4d2:	28 f0       	brcs	.+10     	; 0x4de <DIO_u8ReadpinVal+0x10>
 4d4:	82 30       	cpi	r24, 0x02	; 2
 4d6:	a9 f0       	breq	.+42     	; 0x502 <DIO_u8ReadpinVal+0x34>
 4d8:	83 30       	cpi	r24, 0x03	; 3
 4da:	e1 f0       	breq	.+56     	; 0x514 <DIO_u8ReadpinVal+0x46>
 4dc:	24 c0       	rjmp	.+72     	; 0x526 <DIO_u8ReadpinVal+0x58>
		  
		  case DIO_PORTA:Loc_u8Val = GET_BIT(PINA_REG,copy_u8pin) ; break;
 4de:	89 b3       	in	r24, 0x19	; 25
 4e0:	90 e0       	ldi	r25, 0x00	; 0
 4e2:	02 c0       	rjmp	.+4      	; 0x4e8 <DIO_u8ReadpinVal+0x1a>
 4e4:	95 95       	asr	r25
 4e6:	87 95       	ror	r24
 4e8:	6a 95       	dec	r22
 4ea:	e2 f7       	brpl	.-8      	; 0x4e4 <DIO_u8ReadpinVal+0x16>
 4ec:	81 70       	andi	r24, 0x01	; 1
 4ee:	08 95       	ret
		  case DIO_PORTB:Loc_u8Val = GET_BIT(PINB_REG,copy_u8pin) ; break;
 4f0:	86 b3       	in	r24, 0x16	; 22
 4f2:	90 e0       	ldi	r25, 0x00	; 0
 4f4:	02 c0       	rjmp	.+4      	; 0x4fa <DIO_u8ReadpinVal+0x2c>
 4f6:	95 95       	asr	r25
 4f8:	87 95       	ror	r24
 4fa:	6a 95       	dec	r22
 4fc:	e2 f7       	brpl	.-8      	; 0x4f6 <DIO_u8ReadpinVal+0x28>
 4fe:	81 70       	andi	r24, 0x01	; 1
 500:	08 95       	ret
		  case DIO_PORTC:Loc_u8Val = GET_BIT(PINC_REG,copy_u8pin) ; break;
 502:	83 b3       	in	r24, 0x13	; 19
 504:	90 e0       	ldi	r25, 0x00	; 0
 506:	02 c0       	rjmp	.+4      	; 0x50c <DIO_u8ReadpinVal+0x3e>
 508:	95 95       	asr	r25
 50a:	87 95       	ror	r24
 50c:	6a 95       	dec	r22
 50e:	e2 f7       	brpl	.-8      	; 0x508 <DIO_u8ReadpinVal+0x3a>
 510:	81 70       	andi	r24, 0x01	; 1
 512:	08 95       	ret
		  case DIO_PORTD:Loc_u8Val = GET_BIT(PIND_REG,copy_u8pin) ; break ;
 514:	80 b3       	in	r24, 0x10	; 16
 516:	90 e0       	ldi	r25, 0x00	; 0
 518:	02 c0       	rjmp	.+4      	; 0x51e <DIO_u8ReadpinVal+0x50>
 51a:	95 95       	asr	r25
 51c:	87 95       	ror	r24
 51e:	6a 95       	dec	r22
 520:	e2 f7       	brpl	.-8      	; 0x51a <DIO_u8ReadpinVal+0x4c>
 522:	81 70       	andi	r24, 0x01	; 1
 524:	08 95       	ret
	
}

u8 DIO_u8ReadpinVal(u8 copy_u8port, u8 copy_u8pin){
	
	 u8 Loc_u8Val=0 ; 
 526:	80 e0       	ldi	r24, 0x00	; 0
	
	
	return Loc_u8Val ; 
	
	
}
 528:	08 95       	ret

0000052a <__vector_1>:
}


/*int0*/
void __vector_1(void)__attribute__((signal)) ;
void __vector_1(void){
 52a:	1f 92       	push	r1
 52c:	0f 92       	push	r0
 52e:	0f b6       	in	r0, 0x3f	; 63
 530:	0f 92       	push	r0
 532:	11 24       	eor	r1, r1
 534:	2f 93       	push	r18
 536:	3f 93       	push	r19
 538:	4f 93       	push	r20
 53a:	5f 93       	push	r21
 53c:	6f 93       	push	r22
 53e:	7f 93       	push	r23
 540:	8f 93       	push	r24
 542:	9f 93       	push	r25
 544:	af 93       	push	r26
 546:	bf 93       	push	r27
 548:	ef 93       	push	r30
 54a:	ff 93       	push	r31
	
	 EXTI_PTR[0]() ; 
 54c:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 550:	f0 91 61 00 	lds	r31, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 554:	09 95       	icall
	
	
}
 556:	ff 91       	pop	r31
 558:	ef 91       	pop	r30
 55a:	bf 91       	pop	r27
 55c:	af 91       	pop	r26
 55e:	9f 91       	pop	r25
 560:	8f 91       	pop	r24
 562:	7f 91       	pop	r23
 564:	6f 91       	pop	r22
 566:	5f 91       	pop	r21
 568:	4f 91       	pop	r20
 56a:	3f 91       	pop	r19
 56c:	2f 91       	pop	r18
 56e:	0f 90       	pop	r0
 570:	0f be       	out	0x3f, r0	; 63
 572:	0f 90       	pop	r0
 574:	1f 90       	pop	r1
 576:	18 95       	reti

00000578 <__vector_2>:

/*int1*/
void __vector_2(void)__attribute__((signal)) ;
void __vector_2(void){
 578:	1f 92       	push	r1
 57a:	0f 92       	push	r0
 57c:	0f b6       	in	r0, 0x3f	; 63
 57e:	0f 92       	push	r0
 580:	11 24       	eor	r1, r1
 582:	2f 93       	push	r18
 584:	3f 93       	push	r19
 586:	4f 93       	push	r20
 588:	5f 93       	push	r21
 58a:	6f 93       	push	r22
 58c:	7f 93       	push	r23
 58e:	8f 93       	push	r24
 590:	9f 93       	push	r25
 592:	af 93       	push	r26
 594:	bf 93       	push	r27
 596:	ef 93       	push	r30
 598:	ff 93       	push	r31
	
	
EXTI_PTR[1]() ; 
 59a:	e0 91 62 00 	lds	r30, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 59e:	f0 91 63 00 	lds	r31, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 5a2:	09 95       	icall
	
	
}
 5a4:	ff 91       	pop	r31
 5a6:	ef 91       	pop	r30
 5a8:	bf 91       	pop	r27
 5aa:	af 91       	pop	r26
 5ac:	9f 91       	pop	r25
 5ae:	8f 91       	pop	r24
 5b0:	7f 91       	pop	r23
 5b2:	6f 91       	pop	r22
 5b4:	5f 91       	pop	r21
 5b6:	4f 91       	pop	r20
 5b8:	3f 91       	pop	r19
 5ba:	2f 91       	pop	r18
 5bc:	0f 90       	pop	r0
 5be:	0f be       	out	0x3f, r0	; 63
 5c0:	0f 90       	pop	r0
 5c2:	1f 90       	pop	r1
 5c4:	18 95       	reti

000005c6 <__vector_3>:
/*int2 */
void __vector_3(void)__attribute__((signal)) ;
void __vector_3(void){
 5c6:	1f 92       	push	r1
 5c8:	0f 92       	push	r0
 5ca:	0f b6       	in	r0, 0x3f	; 63
 5cc:	0f 92       	push	r0
 5ce:	11 24       	eor	r1, r1
 5d0:	2f 93       	push	r18
 5d2:	3f 93       	push	r19
 5d4:	4f 93       	push	r20
 5d6:	5f 93       	push	r21
 5d8:	6f 93       	push	r22
 5da:	7f 93       	push	r23
 5dc:	8f 93       	push	r24
 5de:	9f 93       	push	r25
 5e0:	af 93       	push	r26
 5e2:	bf 93       	push	r27
 5e4:	ef 93       	push	r30
 5e6:	ff 93       	push	r31
	
	
	EXTI_PTR[2]() ; 
 5e8:	e0 91 64 00 	lds	r30, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 5ec:	f0 91 65 00 	lds	r31, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 5f0:	09 95       	icall
	
	
}
 5f2:	ff 91       	pop	r31
 5f4:	ef 91       	pop	r30
 5f6:	bf 91       	pop	r27
 5f8:	af 91       	pop	r26
 5fa:	9f 91       	pop	r25
 5fc:	8f 91       	pop	r24
 5fe:	7f 91       	pop	r23
 600:	6f 91       	pop	r22
 602:	5f 91       	pop	r21
 604:	4f 91       	pop	r20
 606:	3f 91       	pop	r19
 608:	2f 91       	pop	r18
 60a:	0f 90       	pop	r0
 60c:	0f be       	out	0x3f, r0	; 63
 60e:	0f 90       	pop	r0
 610:	1f 90       	pop	r1
 612:	18 95       	reti

00000614 <__vector_11>:
			}
	
}

void __vector_11(void)__attribute__((signal)) ;
void __vector_11(void){
 614:	1f 92       	push	r1
 616:	0f 92       	push	r0
 618:	0f b6       	in	r0, 0x3f	; 63
 61a:	0f 92       	push	r0
 61c:	11 24       	eor	r1, r1
 61e:	2f 93       	push	r18
 620:	3f 93       	push	r19
 622:	4f 93       	push	r20
 624:	5f 93       	push	r21
 626:	6f 93       	push	r22
 628:	7f 93       	push	r23
 62a:	8f 93       	push	r24
 62c:	9f 93       	push	r25
 62e:	af 93       	push	r26
 630:	bf 93       	push	r27
 632:	ef 93       	push	r30
 634:	ff 93       	push	r31
	

TIM0_PTR[0]() ; 
 636:	e0 91 66 00 	lds	r30, 0x0066	; 0x800066 <TIM0_PTR>
 63a:	f0 91 67 00 	lds	r31, 0x0067	; 0x800067 <TIM0_PTR+0x1>
 63e:	09 95       	icall


}
 640:	ff 91       	pop	r31
 642:	ef 91       	pop	r30
 644:	bf 91       	pop	r27
 646:	af 91       	pop	r26
 648:	9f 91       	pop	r25
 64a:	8f 91       	pop	r24
 64c:	7f 91       	pop	r23
 64e:	6f 91       	pop	r22
 650:	5f 91       	pop	r21
 652:	4f 91       	pop	r20
 654:	3f 91       	pop	r19
 656:	2f 91       	pop	r18
 658:	0f 90       	pop	r0
 65a:	0f be       	out	0x3f, r0	; 63
 65c:	0f 90       	pop	r0
 65e:	1f 90       	pop	r1
 660:	18 95       	reti

00000662 <__vector_10>:


*/

void __vector_10(void)__attribute__((signal)) ;
void __vector_10(void){
 662:	1f 92       	push	r1
 664:	0f 92       	push	r0
 666:	0f b6       	in	r0, 0x3f	; 63
 668:	0f 92       	push	r0
 66a:	11 24       	eor	r1, r1
 66c:	2f 93       	push	r18
 66e:	3f 93       	push	r19
 670:	4f 93       	push	r20
 672:	5f 93       	push	r21
 674:	6f 93       	push	r22
 676:	7f 93       	push	r23
 678:	8f 93       	push	r24
 67a:	9f 93       	push	r25
 67c:	af 93       	push	r26
 67e:	bf 93       	push	r27
 680:	ef 93       	push	r30
 682:	ff 93       	push	r31
	

TIM0_PTR[1]() ;
 684:	e0 91 68 00 	lds	r30, 0x0068	; 0x800068 <TIM0_PTR+0x2>
 688:	f0 91 69 00 	lds	r31, 0x0069	; 0x800069 <TIM0_PTR+0x3>
 68c:	09 95       	icall

 68e:	ff 91       	pop	r31
 690:	ef 91       	pop	r30
 692:	bf 91       	pop	r27
 694:	af 91       	pop	r26
 696:	9f 91       	pop	r25
 698:	8f 91       	pop	r24
 69a:	7f 91       	pop	r23
 69c:	6f 91       	pop	r22
 69e:	5f 91       	pop	r21
 6a0:	4f 91       	pop	r20
 6a2:	3f 91       	pop	r19
 6a4:	2f 91       	pop	r18
 6a6:	0f 90       	pop	r0
 6a8:	0f be       	out	0x3f, r0	; 63
 6aa:	0f 90       	pop	r0
 6ac:	1f 90       	pop	r1
 6ae:	18 95       	reti

000006b0 <_exit>:
 6b0:	f8 94       	cli

000006b2 <__stop_program>:
 6b2:	ff cf       	rjmp	.-2      	; 0x6b2 <__stop_program>
